@import '_breakpoints.scss';


@mixin responsive($size) {

  //* Small
  @if size == sm {
    //! Tamanho M치ximo da tela = tamanho definido para medium
    @media screen and (max-width: $medium) {
      @content;
    }
  }

  //* Medium
  @else if size == md {
    //! Tamanho minimo = tamaho definido para medio
    //! Tamaho m치ximo = tamanho definido para large
    @media screen and (min-width: $medium) and (max-width: $large){
      @content;
    }
  }

  //* Large
  @else if size == lg {
    //! Tamanho minimo = tamanho definido para large 
    //! Tamanho m치ximo = tamanho definido para extra-large
    @media screen and (max-width: $x-large) and (min-width: $large){
      @content;
    }
  }

  //* Extra large
  @else if size == xl {
    //! Tamanho minimo = tamanho definido para extra-large
    @media screen and (min-width: $x-large){
      @content;
    }
  }
  //* Extra small
  @else if size == xs {
    //! Tamanho m치ximo = tamanho definido para small
    @media screen and (max-width: $small){
      @content;
    }
  }
  
}

$container: 1200px;
$gutter: 24px;

.container {
  max-width: $container;
  margin: 48px auto;
  padding: 48px 16px;
  
  border: 1px solid red;
}

@function grid($col, $total: 12) {
  @return ($col / $total) * 100%;
}


@for $i from 1 through 12 {
  .grid-#{$i} {
    width: calc(#{grid($i)} - #{$gutter});
    margin: $gutter / 2;
    background: gray;
    border: 1px solid green;
    height: 50px;


    //! Existem casos do elemento pai perder a referencia de tamanho
    float: left;
    //! Clearfix 
    &::after {
      content: '';
      display: table;
      clear: both;
    }

    @include responsive(s){
      width: calc(100% - #{$gutter});
      float: none;
    }
  }
}